{"version":3,"sources":["webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/hash-base/index.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/errors-browser.js","webpack:///./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js"],"names":["eos","_require$codes","codes","ERR_MISSING_ARGS","ERR_STREAM_DESTROYED","noop","err","destroyer","stream","reading","writing","callback","called","apply","arguments","once","closed","on","undefined","readable","writable","destroyed","setHeader","abort","isRequest","destroy","call","fn","pipe","from","to","popCallback","streams","length","pop","module","exports","_len","Array","_key","error","isArray","destroys","map","i","forEach","reduce","objectKeys","Object","keys","obj","key","push","Duplex","Readable","Writable","prototype","v","method","options","this","allowHalfOpen","onend","_writableState","ended","process","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","getBuffer","_readableState","set","value","ERR_STREAM_PREMATURE_CLOSE","opts","args","onlegacyfinish","onfinish","writableEnded","finished","readableEnded","endEmitted","onerror","onclose","onrequest","req","removeListener","Transform","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","er","data","ts","_transformState","transforming","cb","writecb","emit","writechunk","rs","needReadable","_read","bind","needTransform","writeencoding","sync","transform","_transform","flush","_flush","prefinish","_this","done","chunk","encoding","_write","n","_destroy","err2","PassThrough","CorkedRequest","state","next","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","Stream","Buffer","OurUint8Array","global","Uint8Array","realHasInstance","destroyImpl","getHighWaterMark","ERR_INVALID_ARG_TYPE","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","errorOrDestroy","nop","isDuplex","objectMode","writableObjectMode","finalCalled","needDrain","ending","noDecode","decodeStrings","defaultEncoding","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","emitClose","autoDestroy","bufferedRequestCount","write","writev","_writev","final","_final","doWrite","len","onwriteDrain","l","buffer","holder","count","allBuffers","isBuf","callFinal","need","rState","current","out","_","Symbol","hasInstance","Function","object","ret","isBuffer","_uint8ArrayToBuffer","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","indexOf","endWritable","_undestroy","undestroy","pipeline","_Object$setPrototypeO","_defineProperty","configurable","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","resolve","read","onReadable","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","Promise","reject","promise","lastPromise","then","wrapForNext","asyncIterator","_this2","_Object$create","iterator","create","code","ReadableState","EventEmitter","EElistenerCount","emitter","type","listeners","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","readableObjectMode","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","addChunk","maybeReadMore","unshift","isPaused","setEncoding","enc","p","head","content","clear","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","shift","join","first","concat","consume","endReadable","endReadableNT","wState","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","pipeOnDrain","pause","event","prependListener","_events","dests","index","splice","ev","res","addListener","removeAllListeners","wrap","_fromList","iterable","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","HashBase","blockSize","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","inherits","update","digest","val","prefix","TypeError","throwIfNotStringOrBuffer","Error","block","offset","_update","j","carry","_digest","toString","fill","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_defineProperties","target","props","descriptor","inspect","custom","instance","Constructor","_classCallCheck","tail","protoProps","staticProps","s","alloc","copy","hasStrings","slice","_getString","_getBuffer","c","str","nb","buf","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","createErrorType","message","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","constructor","__proto__","name","oneOf","expected","thing","String","actual","determiner","search","pos","msg","substr","replace","this_len","substring","endsWith","start","includes","arg","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","isFinite","Math","floor"],"mappings":"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","file":"npm.hash-base.e8d02c19.js","sourcesContent":["// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = require('events').EventEmitter;\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};"],"sourceRoot":""}