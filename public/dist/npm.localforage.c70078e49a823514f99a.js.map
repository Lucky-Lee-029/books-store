{"version":3,"sources":["webpack:///./node_modules/localforage/dist/localforage.js"],"names":["module","exports","e","t","n","r","s","o","u","i","f","Error","code","l","call","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","push","this","self","window","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","status","out","prototype","constructor","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","supportsBlobs","dbContexts","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER_LENGTH","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","SERIALIZED_MARKER","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","size","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance"],"mappings":"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","file":"npm.localforage.c70078e49a823514f99a.js","sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"sourceRoot":""}